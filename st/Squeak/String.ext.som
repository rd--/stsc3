String = String (

dirAllFilesWithExt: ext = (
	"List of all files with a particular file extension residing in me (I am the name of a directory)"
	^((FileDirectory on: self) fullNamesOfAllFilesInSubtree) select: [ :x | x endsWith: ext ]
)

evalString = (
	"Evaluate myself (I am a Smalltalk expression)"
	^Compiler evaluate: self
)

fileListOn = (
	"Open a FileList on myself (I am the name of a directory)"
	^FileList openOn: (FileDirectory on: self)
)

readTextFile = (
	"Read my contents (I am the name of an existing text file)"
	^FileStream oldFileNamed: self do: [ :in | in contentsOfEntireFile ]
)

systemCommand = (
	"Run myself as a synchronous OSProcess (I am an operating system command)."
	^OSProcess command: self "<- waitForCommand: hangs Squeak 5.3?"
)

writeFile: aBlock = (
	| aStream |
	aStream := FileStream forceNewFileNamed: self.
	aBlock value: aStream.
	aStream flush; close
)

writeBinaryFile: aBlock = (
	self writeFile: [ :aStream | aStream binary. aBlock value: aStream ]
)

writeTextFile: aBlock = (
	"Run aBlock on me as a FileStream (I am the name of a text file, possibly already existing)"
	self writeFile: [ :aStream | aStream text. aBlock value: aStream ]
)

)

