Voicer = Object (

----------------------------

k0: k0 stp: stp c0: c0 numVoices: numVoices voiceFunc: voiceFunc = (
	^(0 to: numVoices - 1) collect: [ :c | voiceFunc value: (self k0: k0 stp: stp c: (c0 + c))]
)

k0: k0 stp: stp c: c = (
	^CcEvent voice: c from: (ControlIn numChan: 9 bus: (k0 + (c * stp)))
)

numVoices: numVoices voiceFunc: voiceFunc = (
	| k0 stp c0 |
	k0 := 13000. "Control name: 'eventAddr' init: 13000."
	stp := 10. "Control name: 'eventIncr' init: 10."
	c0 := 0. "Control name: 'eventZero' init: 0."
	^self k0: k0 stp: stp c0: c0 numVoices: numVoices voiceFunc: voiceFunc
)

primaryFactoryMethod = (
	^#numVoices:voiceFunc:
)

voiceAddr: voiceNumber = (
	| eventAddr eventIncr eventZero |
	eventAddr := 13000.
	eventIncr := 10.
	eventZero := 0.
	^eventAddr + (voiceNumber - 1 + eventZero * eventIncr)
)

comment = (
	^'Continuous controller event voicer'
)

)
