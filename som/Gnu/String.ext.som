String = String (

evalString = (
	"Evaluate myself (I am a Smalltalk expression)"
	^Behavior evaluate: self
)

putOn: aStream = (
  "Run nextPut: for each character in self."
	^1 to: self size do: [ :item | aStream nextPut: (self at: item) ]
)

readTextFile = (
	"Read entire contents from file as String."
	| stream text |
	stream := FileStream open: self mode: FileStream read.
	text := stream contents.
	stream close.
	^text
)

systemCommand = (
	"Run system command."
	^Smalltalk system: self
)

writeBinaryFile: aBlock = (
	self writeTextFile: aBlock
)

writeTextFile: aBlock = (
	"Write text file passing aBlock a stream."
	| stream |
	stream := FileStream open: self mode: FileStream write.
	aBlock value: stream.
	stream close
)

)

