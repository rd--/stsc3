Object = Object (

adaptToFloat: rcvr andCompare: selector = (
	"If I am involved in comparison with a Float.
	Default behaviour is to process comparison as any other selectors."
	^ self adaptToFloat: rcvr andSend: selector
)

adaptToFloat: rcvr andSend: selector = (
	"If no method has been provided for adapting an object to a Float,
	then it may be adequate to simply adapt it to a number."
	^ self adaptToNumber: rcvr andSend: selector
)

adaptToInteger: rcvr andCompare: selector = (
	"If I am involved in comparison with an Integer.
	Default behaviour is to process comparison as any other selectors."
	^ self adaptToInteger: rcvr andSend: selector
)

adaptToInteger: rcvr andSend: selector = (
	"If no method has been provided for adapting an object to a Integer,
	then it may be adequate to simply adapt it to a number."
	^ self adaptToNumber: rcvr andSend: selector
)

as: aSimilarClass = (
	"Create an object of class aSimilarClass that has similar contents to the receiver."
	^ aSimilarClass newFrom: self
)

asString = (
	"Answer a string that represents the receiver."
	^self printString
)

error = (
	"Throw a generic Error exception."
	^self error: 'Error!'
)

isBoolean = (
	^false
)

isCollection = (
	^false
)

isFraction = (
	^ false
)

isInterval = (
	^false
)

isLiteral = (
	^false
)

value = (
	^self
)

)
