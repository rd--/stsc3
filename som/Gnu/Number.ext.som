Number = Number (

** aNumber = (
	^BinaryOpUgen selector: #raisedTo: a: self b: aNumber
)

adaptToCollection: rcvr andSend: selector = (
	"If I am involved in arithmetic with a Collection, return a Collection of
	the results of each element combined with me in that expression."
	^ rcvr collect: [:element | element perform: selector with: self]
)

adaptToFloat: rcvr andSend: selector = (
	^ rcvr perform: selector with: self asFloat
)

adaptToInteger: rcvr andSend: selector = (
	^ self subclassResponsibility
)

isZero = (
	^self = 0
)

log2 = (
	^self log: 2
)

microSeconds = (
	^ Duration microSeconds: self
)

milliSeconds = (
	^ Delay forMilliseconds: self
)

seconds = (
	^ Delay forMilliseconds: (self * 1000) rounded
)

)

