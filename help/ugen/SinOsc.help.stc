// SinOsc
var voiceFunc = {
	var tr = Dust(1);
	var freq = TRand(3785, 3800, tr);
	var amp = SinOsc(TRand(10, 30, tr), 0) * 0.2;
	var osc = SinOsc(freq, 0) * amp + SinOsc(freq * { TRand(2.91, 3.02, tr) }.dup, 0);
	var env = Decay2(tr, 0.01, 1);
	osc * env * 0.4
};
voiceFunc.dup(12).splay2

// SinOsc ; two oscillators ; frequencies approach 500 from opposite directions
var lfo = MouseX(1, 0, 0, 0.2);
var sig = SinOsc(LinExp(lfo, 0, 1, 100, 500), 0) + SinOsc(LinExp(lfo, 0, 1, 1000, 500), 0);
sig * 0.1

// SinOsc ; https://scsynth.org/t/5169/5 (dietcv)
OverlapTexture({
	arg tr;
	var syncEgTop = TRand(8, 20, tr);
	var syncRatio = 2;
	var syncDcy = TRand(0.5, 2, tr);
	var syncEnv = TXLine(syncEgTop / syncRatio, 1, syncDcy, tr);
	var gainEnv = Adsr(Trig(tr, syncDcy), 0.3, 0.3, 0.5, 0.1, -4);
	var freq = { TChoose(tr, [45, 48, 52, 53, 57, 58, 60,  64, 65, 70]).midiCps }.dup(5);
	var in = LFTri(freq, 0);
	var phase = Sweep(in, freq * syncRatio * syncEnv);
	var synced = SinOsc(0, (phase % 1) * 2 * pi).squared;
	var sig = synced * in * gainEnv;
	sig.splay2 * 0.2
}, 2, 0, 2)

// https://scsynth.org/t/6264/2
var numPartials = 64;
var spectrum = 1.to(numPartials).asArray;
var inharmonic = MouseX(0.002, 0.008, 0, 0.2);
var tension = (1 + (spectrum * spectrum * inharmonic)).sqrt;
var tilt = MouseY(-5, -1, 0, 0.2);
var ampArray = (spectrum.log2 * tilt).dbAmp;
var freq0 = 110;
var freq = freq0 * spectrum * tension;
var sig = SinOsc(freq, { Rand(0, 2 * pi) }.dup(numPartials));
(sig * ampArray).sum / numPartials

// SinOsc ; https://scsynth.org/t/6256/5 ; bipolar version
var freq = 130;
var squeezeStretch = LFTri(0.1, 0) * 5; // from -5 to 5
var tri = LFTri(freq, 1) * 0.5 + 0.5;
var pulse = LFPulse(freq, 0, 0.5) * 2 - 1;
var outPhase = pulse * (tri ** (2 ** squeezeStretch));
SinOsc(0, outPhase * pi) * 0.1;
