// bufRd ; phasor as phase input ; requires=buf
var buf = 0;
var nc = 2;
var tr = Impulse(1 / BufDur(buf), 0);
var ph = Phasor(tr, BufRateScale(buf), 0, BufFrames(buf), 0);
BufRd(nc, buf, ph, 0, 2)

// bufRd ; phasor as phase input ; requires=buf
var buf = 0;
var nc = 2;
{
    var tr = Impulse(2 ** Rand(1, 3) / BufDur(buf), 0).kr;
    var mnn = TIRand(-2, 0, tr) * 12 + TChoose(tr, [0, 2.1, 4.9, 7, 9.2]);
    var rt = mnn.midiRatio * BufRateScale(buf);
    var ph = Phasor(tr, rt, 0, BufFrames(buf), 0);
    BufRd(nc, buf, ph, 0, 2)
}.dup(6).sum * 0.25

// bufRd ; phasor as phase input ; equivalent graph given stereo file as two mono buffers ; requires=buf
var buf = [10, 11];
{
    var tr = Impulse(2 ** Rand(1, 3) / BufDur(buf.first), 0).kr;
    var mnn = TIRand(-2, 0, tr) * 12 + TChoose(tr, [0, 2.1, 4.9, 7, 9.2]);
    var rt = mnn.midiRatio * BufRateScale(buf);
    var ph = Phasor(tr, rt, 0, BufFrames(buf), 0);
    BufRd(1, buf, ph, 0, 2)
}.dup(6).sum * 0.25

// bufRd ; phasor as phase input ; mono ; requires=buf
var buf = 10;
var nc = 1;
{
    var tr = Impulse(2 ** Rand(1, 3) / BufDur(buf), 0).kr;
    var mnn = TIRand(-2, 0, tr) * 12 + TChoose(tr, [0, 2.1, 4.9, 7, 9.2]);
    var rt = mnn.midiRatio * BufRateScale(buf);
    var ph = Phasor(tr, rt, 0, BufFrames(buf), 0);
    BufRd(nc, buf, ph, 0, 2)
}.dup(6).splay2 * 0.25
