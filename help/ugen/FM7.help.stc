// FM7 ; two of six
var ctlMatrix = [
	[XLn(300, 310, 4), 0, 1],
	[XLn(300, 310, 8), 0, 1],
	[0, 0, 1],
	[0, 0, 1],
	[0, 0, 1],
	[0, 0, 1]
];
var modMatrix = [
	[Ln(0, 0.001, 2), Ln(0.1, 0, 4), 0, 0, 0, 0],
	[Ln(0, 6, 1), 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0]
];
FM7(ctlMatrix, modMatrix) * 0.1

// FM7
var freq = LFNoise0(3).expRange(200, 310);
var ctlMatrix = [
	[freq, 0, 1],
	[freq, 0, 1],
	[LFNoise2(0.5).expRange(3, 80), 0, 1],
	[LFNoise2(0.5).expRange(3, 800), 0, 1],
	[LFNoise2(0.5).expRange(3, 800), 0, 1],
	[LFNoise2(0.5).expRange(0.3, 10), 0, 1]
];
var x = MouseX(0, 3, 0, 0.2);
var modMatrix = { { LFNoise1(0.5).max(0) }.dup(6) * x }.dup(6);
FM7(ctlMatrix, modMatrix).keep(2) * -12.dbAmp

// FM7 ; an algorithmically generated graph courtesy f0 ; note one-indexing
var xMatrix = [
	[
		[0.0, -1/3, -1.0, 0.0],
		[0.75, 0.75, 0.0, -0.5],
		[-0.5, -0.25, 0.25, -0.75],
		[-0.5, 1.0, 1.0, 1.0],
		[0.0, 1/6, -0.75, -1.0],
		[0.5, 0.5, -0.5, 1/3]
	],
	[
		[-1/3, 0.5, -0.5, -0.5],
		[0.5, 0.75, 0.25, 0.75],
		[-15/18, 0.25, -1.0, 0.5],
		[1.5, 0.25, 0.25, -0.25],
		[-2/3, -2/3, -1.0, -0.5],
		[-1.0, 0.0, -15/18, -1/3]
	],
	[
		[0.25, -0.5, -0.5, -1.0],
		[-0.5, 1.0, -1.5, 0.0],
		[-1.0, -1.5, -0.5, 0.0],
		[0.5, -1.0, 7/6, -0.5],
		[15/18, -0.75, -1.5, 0.5],
		[0.25, -1.0, 0.5, 1.0]
	],
	[
		[1.0, 1/3, 0.0, -0.75],
		[-0.25, 0.0, 0.0, -0.5],
		[-0.5, -0.5, 0.0, 0.5],
		[1.0, 0.75, 0.5, 0.5],
		[0.0, 1.5, -0.5, 0.0],
		[1.0, 0.0, -0.25, -0.5]
	],
	[
		[0.5, -0.25, 0.0, 1/3],
		[0.25, -0.75, 1/3, -1.0],
		[-0.25, -0.5, 0.25, -7/6],
		[0.0, 0.25, 0.5, 1/6],
		[-1.0, -0.5, 15/18, -0.5],
		[15/18, -0.75, -0.5, 0.0]
	],
	[
		[0.0, -0.75, -1/6, 0.0],
		[1.0, 0.5, 0.5, 0.0],
		[-0.5, 0.0, -0.5, 0.0],
		[-0.5, -1/6, 0.0, 0.5],
		[-0.25, 1/6, -0.75, 0.25],
		[-7/6, -4/3, -1/6, 1.5]
	]
];
var yMatrix = [
	[
		[0.0, -0.5, 1.0, 0.0],
		[-0.5, 1.0, 0.5, -0.5],
		[0.0, 1/3, 1.0, 1.0]
	],
	[
		[-0.5, 0.5, 1.0, 1.0],
		[0.0, 1/3, 0.0, 1.5],
		[-0.5, 15/18, 1.0, 0.0]
	],
	[
		[0.25, -2/3, 0.25, 0.0],
		[0.5, -0.5, -0.5, -0.5],
		[0.5, -0.5, -0.75, 15/18]
	],
	[
		[-0.25, 1.0, 0.0, 1/3],
		[-1.25, -0.25, 0.5, 0.0],
		[0.0, -1.25, -0.25, -0.5]
	],
	[
		[0.75, -0.25, 1.5, 0.0],
		[0.25, -1.5, 0.5, 0.5],
		[-0.5, -0.5, -0.5, -0.25]
	],
	[
		[0.0, 0.5, -0.5, 0.25],
		[0.25, 0.5, -1/3, 0.0],
		[1.0, 0.5, -1/6, 0.5]
	]
];
var ctlMatrix = xMatrix.collect({ arg p; p.collect({ arg q; SinOsc(q[1], q[2]) * q[3] + q[4] }) });
var modMatrix = yMatrix.collect({ arg p; p.collect({ arg q; Pulse(q[1], q[2]) * q[3] + q[4] }) });
var o = FM7(ctlMatrix, modMatrix);
var g3 = LinLin(LFSaw(0.1, 0), -1, 1, 0, -12.dbAmp);
var g6 = -3.dbAmp;
[o[1] + (o[3] * g3) + o[5], o[2] + o[4] + o[6] * g6]
