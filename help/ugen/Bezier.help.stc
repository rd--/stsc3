// Bezier ; reference sine tone ; spl
SinOsc(440, 0) * 0.1

// Bezier ; BÃ©zier curve oscillator ; bezier approximation of sin function ; spl
Bezier(100, 0.001, 440, 0, [0, 0, 0.2, -1.3, 0.3, -1.3, 0.5, 0, 0.7, 1.3, 0.8, 1.3, 1, 0]) * 0.1

// Bezier ; mouse control of frequency ; spl
var x = MouseX(40, 4000, 1, 0.2);
Bezier(100, 0.001, x, 0, [0, 0, 0.2, -1.3, 0.3, -1.3, 0.5, 0, 0.7, 1.3, 0.8, 1.3, 1, 0]) * 0.1

// Bezier ; mouse control of frequency & one control point ; spl
var x = MouseX(40, 4000, 1, 0.2);
var y = MouseY(0.1, 0.2, 0, 0.2);
Bezier(100, 0.001, x, 0, [0, 0, y, -1.3, 0.3, -1.3, 0.5, 0, 0.7, 1.3, 0.8, 1.3, 1, 0]) * 0.1

// Bezier ; dynamic shifting of control points, as oscillator ; spl
var w = {
	arg l, r;
	LinLin(LFDNoise3(2), -1, 1, l, r)
};
var f = {
	var p = [0, 0, w(0.05, 0.25), -1.3, w(0.25, 0.45), -1.3, 0.5, 0, w(0.55, 0.75), 1.3, w(0.75, 0.95), 1.3, 1, 0];
	var o = Bezier(100, 0.001, w(200, 205), 0, p);
	Pan2(o, IRand(-1, 1), 0.1)
};
f.dup(4).sum

// Bezier ; event control
var voiceFunc = {
	arg e;
	var w = {
		arg l, r;
		LinLin(LFDNoise3(e.rx * 5), -1, 1, l, r)
	};
	{
		var p = [0, 0, w(0.05, 0.25), -1.3, w(0.25, 0.45), -1.3, 0.5, 0, w(0.55, 0.75), 1.3, w(0.75, 0.95), 1.3, 1, 0];
		var o = Bezier(100, 0.001, w(200, 205) * (e.x + 0.5), 0, p);
		Pan2(o, e.o * 2 - 1, e.z * LagUD(e.w, 0.01, e.y * 4))
	}.dup(4).sum
};
Voicer(4, voiceFunc).sum
