// sturmian sequencer (jrhb)
var rules = Dictionary.newFromAssociations([0 -> [0, 1], 1 -> [0]]);
var rewrite = {
    arg c, n;
    var r = c;
    n.timesRepeat({ r = r.collect({ arg e; rules.at(e) }).concatenation });
    r
};
var strFunc = {
    arg i;
    var str = rewrite.value([0], i + 6);
    var dt = 2 ** i.negated * 10;
    var trig = TDuty(dt, 0, 0, Dseq(1, str), 0);
    var freq = ExpRand(200, i + 1 / 7 * 10100);
    Ringz(trig, freq * [1, 1.2, 1.5], ExpRand(2 ** i.negated * 0.1, 1.101) ).mix.distort };
0.to(6).collect(strFunc).splay * 0.3

// sturmian sequencer (jrhb)
var rules = Dictionary.newFromAssociations([0 -> [0, 1], 1 -> [0]]);
var rewrite = {
    arg c, n;
    var r = c;
    n.timesRepeat({ r = r.collect({ arg e; rules.at(e) }).concatenation });
    r
};
var n = 7;
var strFunc = {
    arg i;
    var str = rewrite.value([0], i + 6);
    var dt = 2 ** (n - i).negated * 20;
    var trig = TDuty(dt, 0, 0, Dseq(inf, str), 0);
    var freq = TExpRand(200, (n - i) / n * 10100, trig);
    //var trigFlt = BPF(trig, LFNoise2(0.1) * 0.02 + 1 * freq, 0.2);
    Ringz(trig, freq * [1, 1.1, 1.2], ExpRand(2 ** i.negated * 0.1, 0.5)).mix.distort };
0.to(n).collect(strFunc).splay * 0.3
