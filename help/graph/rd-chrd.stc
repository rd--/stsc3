// chrd (rd) ; graph rewrite
OverlapTexture({
    arg tr;
    var chrd = {
        arg m;
        var ds = 3;
        var d = #[5, 4, 5, 7, 4, 5] * ds;
        var f = TXLine(m, m + TRand(0.05, 0.5, tr), d, tr).midicps;
        var e = EnvSine(d.max, TRand(0.005, 0.01, tr));
        var p = TXLine(TRand(-1, 1, tr), TRand(-1, 1, tr), d, tr);
        var o = SinOsc(f.kr, 0);
        Pan2(o, p, e.envGen(tr)).mix
    };
    var scale = #[0, 2, 4, 5, 7, 9, 11];
    var octaves = #[4, 5, 6, 7];
    var mnn = scale.collect({ arg n; octaves.collect({ arg o; n + (o * 12) }) }).concatenation;
    var chd = { TChoose(tr, mnn) }.dup(6);
    9.mixFill({ chrd.value(chd) })
}, 21, 0, 3)

// chrd (rd) ; graph rewrite
{RTexture.overlapGraph(graphFunc:
{arg tr
;var chrd =
  {arg m
  ;var ds = 3
  ;var d = [5, 4, 5, 7, 4, 5] * ds
  ;var f = RTXLine.kr(start: m, end: m + TRand.kr(lo: 0.05, hi: 0.5, trig: tr), dur: d, trig: tr).midicps
  ;var z = Env.sine(dur: d.maxItem, level: TRand.kr(lo: 0.005, hi: 0.01, trig: tr))
  ;var e = EnvGen.kr(envelope: z, gate: tr, levelScale: 1, levelBias: 0, timeScale: 1, doneAction: 0)
  ;var p = RTXLine.kr(start: TRand.kr(lo: -1, hi: 1, trig: tr), end: TRand.kr(lo: -1, hi: 1, trig: tr), dur: d, trig: tr)
  ;var o = SinOsc.ar(freq: f, phase: 0)
  ;Mix.ar(Pan2.ar(in: o, pos: p, level: e))}
;var scale = [0, 2, 4, 5, 7, 9, 11]
;var octaves = [4, 5, 6, 7]
;var mnn = [0,2,4,5,7,9,11].collect({arg n; [4,5,6,7].collect({arg o; n + (o * 12)})}).flatten
;var chd = 6.collect({TChoose.kr(trig: tr, array: mnn)})
;Mix.fill(n: 9, function: {chrd.value(chd)})}, sustainTime: 21, transitionTime: 0, overlap: 3)}

//---- ; calculations (stsc3 does not parse list comprehensions)
all {:n + (o * 12),n <- [0,2,4,5,7,9,11],o <- [4,5,6,7]}
[0,2,4,5,7,9,11].collect({arg n; [4,5,6,7].collect({arg o; n + (o * 12)})}).flatten
